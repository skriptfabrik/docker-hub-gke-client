#!/usr/bin/env sh

set -e

if [[ -z "${GKE_SERVICE_ACCOUNT_KEY}" ]]; then
    cat <<EOT
Service account key missing!
Provide the key using the environment variable GKE_SERVICE_ACCOUNT_KEY
EOT
    exit 128;
fi

if [[ -z "${GKE_CLUSTER_NAME}" ]]; then
    cat <<EOT
Cluster name missing!
Provide the cluster name using the environment variable GKE_CLUSTER_NAME
EOT
    exit 128;
fi

if [[ -n "${GKE_REGION}" ]]; then
    GKE_LOCATION_OPTION="--region ${GKE_REGION}";
elif [[ -n "${GKE_ZONE}" ]]; then
    GKE_LOCATION_OPTION="--zone ${GKE_ZONE}";
else
    cat <<EOT
Cluster region or zone missing!
Provide either the region using the environment variable GKE_REGION or the zone using the environment variable GKE_ZONE
EOT
    exit 128;
fi

# Read service account name from service account key json
GKE_SERVICE_ACCOUNT_NAME=$(printf "%s" "${GKE_SERVICE_ACCOUNT_KEY}" | jq .client_email)
GKE_SERVICE_ACCOUNT_NAME="${GKE_SERVICE_ACCOUNT_NAME%\"}"
GKE_SERVICE_ACCOUNT_NAME="${GKE_SERVICE_ACCOUNT_NAME#\"}"

# Read project id from service account key json
GKE_PROJECT_ID=$(printf "%s" "${GKE_SERVICE_ACCOUNT_KEY}" | jq .project_id)
GKE_PROJECT_ID="${GKE_PROJECT_ID%\"}"
GKE_PROJECT_ID="${GKE_PROJECT_ID#\"}"

export GOOGLE_APPLICATION_CREDENTIALS=/root/service-account.json

echo "Engaging application credentials"
echo ${GKE_SERVICE_ACCOUNT_KEY} > ${GOOGLE_APPLICATION_CREDENTIALS}

echo "Activating service account"
gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS} ${GKE_SERVICE_ACCOUNT_NAME}

echo "Updating Kubernetes configuration"
gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --project ${GKE_PROJECT_ID} ${GKE_LOCATION_OPTION}
